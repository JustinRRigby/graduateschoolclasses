?rep
```{r}
deck <- data.frame(id = 1:52,
suit = c(rep("H", 13), rep("D", 13),
rep("C", 13), rep("S", 13)),
value = rep(1:13, 4))
head(dec)
head(eck)
head(deck)
draw_k_cards <- function(deck, k){
# draw cards without repetition
drawn <- sample(deck$id, k)
return(deck[deck$id %in% drawn,])
}
draw_k_cards(deck 6)
draw_k_cards(deck, 6)
deck[deck$id]
deck[deck$id,]
sample(deck, n)
sample(deck, 5)
sample(deck$id, 5)
meow <- sample(deck$id, 5)
head(meow)
?in
?%in%
draw_k_cards <- function(deck, k){
# draw cards without repetition
drawn <- sample(deck$id, k)
return(deck[deck$id %in% drawn,])
}
draw_k_cards()
draw_k_cards(deck, 10)
unique(drawn)
unique(drawn$suit)
head(drawn)
draw_k_cards(deck, 10)
head(drawn)
draw_k_cards <- function(deck, k){
# draw cards without repetition
drawn <- sample(deck$id, k)
return(deck[deck$id %in% drawn,])
}
draw_k_cards(deck, 3)
prob_all_same_suit <- function(deck, k, nreps){
tot_all_same <- 0
for (i in 1:nreps){
drawn <- draw_k_cards(deck, k)
if (length(unique(drawn$suit)) == 1) {
tot_all_same <- tot_all_same + 1
}
}
return(tot_all_same / nreps)
}
unique(meow)
lenght(unique(meow))
length(unique(meow))
estimate_p_all_same_suit <- prob_all_same_suit(deck, 3, 50000)
estimate_p_all_same_suit
estimate_p_all_same_suit
n <- 13 # number of black balls
m <- 52 - n # number of white balls
k <- 3 # how many balls we draw
x <- 3 # how many are black (hearths)
p_all_hearths <- dhyper(x, n, m, k)
p_all_hearths
p_all_same_suit <- 4 * dhyper(x, n, m, k)
p_all_same_suit
prob_all_different_suit <- function(deck, k, nreps){
tot_all_different <- 0
for (i in 1:nreps){
drawn <- draw_k_cards(deck, k)
if (length(unique(drawn$suit)) == 3) {
tot_all_different <- tot_all_different + 1
}
}
return(tot_all_different / nreps)
}
prob_all_different_suit(deck, 3, 50000)
```{r}
(39 / 51) * (26 / 50)
prob_all_different_suit <- function(deck, k, nreps){
tot_all_different <- 0
for (i in 1:nreps){
drawn <- draw_k_cards(deck, k)
if (length(unique(drawn$suit)) == 3) {
tot_all_different <- tot_all_different + 1
}
}
return(tot_all_different / nreps)
}
prob_all_different_suit(deck, 3, 50000)
