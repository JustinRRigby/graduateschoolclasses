## ----setup, include=FALSE------------------------------------------------
knitr::opts_chunk$set(echo = TRUE, eval = TRUE, out.width = '100%', out.height='40%')
## ----load libraries, echo=TRUE, message=FALSE, warning=FALSE-------------
library(igraph)
library(bipartite)
library(ggplot2)
## ------------------------------------------------------------------------
data(olesen2002flores) # Check out the help for information on this data set!
View(olesen2002flores)
olesen2002flores_binary <- 1 * (olesen2002flores > 0) # Make the data binary (unweighted)
View(olesen2002flores_binary)
I <- nrow(olesen2002flores_binary) # Number of lower level species (e.g., hosts, plants)
J <- ncol(olesen2002flores_binary) # Number of higher level species (e.g., parasites, pollinators)
S <- I + J # Total number of species, aka: Network size
L <- sum(olesen2002flores_binary > 0) # Number of edges in the network
L
A_i <- rowSums(olesen2002flores_binary) # The degree of hosts
A_j <- colSums(olesen2002flores_binary) # The degree of parasites
C <- L / (I * J) # Connectance
cc_high <- colSums(olesen2002flores_binary) / nrow(olesen2002flores_binary) # Clustering coefficient higher level (the number of realized links divided by the number of possible links for each species)
cc_low <- rowSums(olesen2002flores_binary) / ncol(olesen2002flores_binary) # Clustering coefficient lower level (the number of realized links divided by the number of possible links for each species)
## ------------------------------------------------------------------------
S_i <- rowSums(olesen2002flores) # Node strength of hosts
S_j <- colSums(olesen2002flores) # Node strength of parasites
## ------------------------------------------------------------------------
S_i <- rowSums(olesen2002flores) # Node strength of hosts
S_j <- colSums(olesen2002flores) # Node strength of parasites
## ------------------------------------------------------------------------
# Species level:
sl_metrics <- specieslevel(olesen2002flores)
names(sl_metrics$`higher level`)
sl_metrics$`higher level`$degree # The degree of flower visitors
# Group level:
gl_metrics <- grouplevel(olesen2002flores)
gl_metrics
?grouplevel
gl_metrics
View(gl_metrics)
# Network level
nl_metrics <- networklevel(olesen2002flores)
nl_metrics
View(nl_metrics)
## ------------------------------------------------------------------------
# First, load the data
otago_nodes <- read.csv('https://raw.githubusercontent.com/pascualgroup/Networks_course/master/Network_data/Otago_Data_Nodes.csv?token=ADd8ONa_lfqD2gKIE5h7vig2-1_xfezXks5azMwWwA%3D%3D')
otago_links <- read.csv('https://raw.githubusercontent.com/pascualgroup/Networks_course/master/Network_data/Otago_Data_Links.csv?token=ADd8ONRlDulEIlfx0L0qUfayAEPtQlfIks5azMwlwA%3D%3D')
otago_web <- graph.data.frame(otago_links, vertices = otago_nodes, directed = T)
# Also load a weighted food web
chesapeake_nodes <- read.csv('https://raw.githubusercontent.com/pascualgroup/Networks_course/master/Network_data/Chesapeake_bay_nodes.csv?token=ADd8OP102bE0HzQNE_1hondsNVhvFiRjks5azMxFwA%3D%3D', header=F)
names(chesapeake_nodes) <- c('nodeId','species_name')
chesapeake_links <- read.csv('https://raw.githubusercontent.com/pascualgroup/Networks_course/master/Network_data/Chesapeake_bay_links.csv?token=ADd8OFq6aj3oEZ84lFQ05iJ0Yu3cQ8qZks5azMxWwA%3D%3D', header=F)
names(chesapeake_links) <- c('from','to','weight')
ches_web <- graph.data.frame(chesapeake_links, vertices = chesapeake_nodes, directed = T)
plot(ches_web, edge.width=log(E(ches_web)$weight)/2, layout=layout.circle)
