s_i <- function (d_gu, dd_gu){
s_u <- (1-
(exp(
(1)/
(1+exp(-(d_gu+dd_gu)/(0.5961611)
)))))
return(s_u)
}
s_i(d_gu, dd_gu)
d_gu <- 5
dd_gu <- 0
s_i <- function (d_gu){
s_u <- (1-
(exp(
(1)/
(1+exp(-(d_gu+dd_gu)/(0.5961611)
)))))
return(s_u)
}
s_i(d_gu)
s_i <- function (d_gu){
s_u <- (1-
(1)/
(1+exp(-(d_gu+dd_gu)/(0.5961611)
)))))
s_i(d_gu)
s_i <- function (d_gu){
s_u <- (1-
(1)/
(1+exp(-(d_gu+dd_gu)/(0.5961611)
)))
return(s_u)
}
s_i(d_gu)
d_gu <- 5
dd_gu <- seq(-4, 1, by = 0.1)
s_i <- function (d_gu, dd_gu){
s_u <- (1-
(1)/
(1+exp(-(d_gu+dd_gu)/(0.5961611)
)))
return(s_u)
}
s_de <- s_i(d_gu)
d_gu <- 5
dd_gu <- seq(-4, 1, by = 0.1)
N = 100
s_i <- function (d_gu, dd_gu){
s_u <- (1-
(1)/
(1+exp(-(d_gu+dd_gu)/(0.5961611)
)))
return(s_u)
}
s_de <- s_i(d_gu)
s_de <- s_i(d_gu, dd_gu)
s_0 <- s_i(d_gu, 0)
s_e <- s_i(d_gu, dd_gu)
s_de <- s_0 - s_3
s_de <- s_0 - s_e
pi <- function(N, s_i){
pi_e <- (exp(2*N*s_e))/(exp(2*N*s_e)+exp(2*N*s_0))
return(pi_e)
}
pi_e <- pi(N, s_e)
plot(gg_gu, s_e)
plot(gg_du, s_e)
plot(dd_gu, s_e)
plot(dd_gu, pi_e)
plot(dd_gu, pi_e) +abline(v=-1) + abline(v=-3)
plot(dd_gu, pi_e, xlab ='dd_gu (kcal/mol)') +abline(v=-1) + abline(v=-3)
plot(dd_gu, pi_e, xlab ='dd_gu (kcal/mol)', main = 'Equalibrium of P_e due to Varying dd_gu') +abline(v=-1) + abline(v=-3)
plot(dd_gu, pi_e, xlab =expression(*Delta *Delta G[u]~(kcal/mol)), main = 'Equalibrium of P_e due to Varying dd_gu') +abline(v=-1) + abline(v=-3)
plot(dd_gu, pi_e, xlab =expression(Delta*Delta*G[u]~(kcal/mol)), main = 'Equalibrium of P_e due to Varying dd_gu') +abline(v=-1) + abline(v=-3)
plot(dd_gu, pi_e, xlab =expression(Delta*Delta*G[u]~(kcal/mol)), ylab = 'Equilibrium proportion of Asp', main = 'Equalibrium of P_e due to Varying dd_gu') +abline(v=-1) + abline(v=-3)
plot(dd_gu, pi_e,type = '1', xlab =expression(Delta*Delta*G[u]~(kcal/mol)), ylab = 'Equilibrium proportion of Asp', main = 'Equalibrium of P_e due to Varying dd_gu') +abline(v=-1) + abline(v=-3)
plot(dd_gu, pi_e, type = "1", xlab =expression(Delta*Delta*G[u]~(kcal/mol)), ylab = 'Equilibrium proportion of Asp', main = 'Equalibrium of P_e due to Varying dd_gu') +abline(v=-1) + abline(v=-3)
plot(dd_gu, pi_e, type = "1", xlab =expression(Delta*Delta*G[u]~(kcal/mol)), ylab = 'Equilibrium proportion of Asp', main = 'Equalibrium of P_e due to Varying dd_gu', xlim = c(-4, 1), ylim = c(0,1)) +abline(v=-1) + abline(v=-3)
library(ggplot)
library(ggplot1)
library(ggplot2)
plot(dd_gu, pi_e, type = "1", xlab =expression(Delta*Delta*G[u]~(kcal/mol)), ylab = 'Equilibrium proportion of Asp', main = 'Equalibrium of P_e due to Varying dd_gu', xlim = c(-4, 1), ylim = c(0,1)) +abline(v=-1) + abline(v=-3)
plot(dd_gu, pi_e, type = "l", xlab =expression(Delta*Delta*G[u]~(kcal/mol)), ylab = 'Equilibrium proportion of Asp', main = 'Equalibrium of P_e due to Varying dd_gu', xlim = c(-4, 1), ylim = c(0,1)) +abline(v=-1) + abline(v=-3)
pi_e <- pi(N, s_e)
pi_e10 <- pi(10, s_e)
pi_e1000 <- pi(1000, s_e)
plot(dd_gu, pi_e, type = "l", xlab =expression(Delta*Delta*G[u]~(kcal/mol)), ylab = 'Equilibrium proportion of Asp', main = 'Equalibrium of P_e due to Varying dd_gu', xlim = c(-4, 1), ylim = c(0,1)) +abline(v=-1) + abline(v=-3)
plot(dd_gu, pi_e10, type = "l", xlab =expression(Delta*Delta*G[u]~(kcal/mol)), ylab = 'Equilibrium proportion of Asp', main = 'Equalibrium of P_e due to Varying dd_gu', xlim = c(-4, 1), ylim = c(0,1)) +abline(v=-1) + abline(v=-3)
plot(dd_gu, pi_e1000, type = "l", xlab =expression(Delta*Delta*G[u]~(kcal/mol)), ylab = 'Equilibrium proportion of Asp', main = 'Equalibrium of P_e due to Varying dd_gu', xlim = c(-4, 1), ylim = c(0,1)) +abline(v=-1) + abline(v=-3)
pi_e <- (exp(2*N*(s_0 - s_e)))/(exp(2*N*s_e)+exp(2*N*s_0))
return(pi_e)
pi <- function(N, s_i){
pi_e <- (exp(2*N*(s_0 - s_e)))/(exp(2*N*s_e)+exp(2*N*s_0))
return(pi_e)
}
pi_e <- pi(N, s_e)
pi_e1000 <- pi(1000, s_e)
plot(dd_gu, pi_e, type = "l", xlab =expression(Delta*Delta*G[u]~(kcal/mol)), ylab = 'Equilibrium proportion of Asp', main = 'Equalibrium of P_e due to Varying dd_gu', xlim = c(-4, 1), ylim = c(0,1)) +abline(v=-1) + abline(v=-3)
plot(dd_gu, pi_e10, type = "l", xlab =expression(Delta*Delta*G[u]~(kcal/mol)), ylab = 'Equilibrium proportion of Asp', main = 'Equalibrium of P_e due to Varying dd_gu', xlim = c(-4, 1), ylim = c(0,1)) +abline(v=-1) + abline(v=-3)
plot(dd_gu, pi_e1000, type = "l", xlab =expression(Delta*Delta*G[u]~(kcal/mol)), ylab = 'Equilibrium proportion of Asp', main = 'Equalibrium of P_e due to Varying dd_gu', xlim = c(-4, 1), ylim = c(0,1)) +abline(v=-1) + abline(v=-3)
#Definning Variables
d_gu <- 5
dd_gu <- seq(-4, 1, by = 0.1)
N = 100
#Calculating the Selection Coefficent for each itteration of dd_gu
s_i <- function (d_gu, dd_gu){
s_u <- (1-
(1)/
(1+exp(-(d_gu+dd_gu)/(0.5961611)
)))
return(s_u)
}
s_0 <- s_i(d_gu, 0)
s_e <- s_i(d_gu, dd_gu)
s_de <- s_0 - s_e
pi <- function(N, s_i){
pi_e <- (exp(2*N*(s_0 - s_e)))/(exp(2*N*s_e)+exp(2*N*s_0))
return(pi_e)
}
pi_e <- pi(N, s_e)
pi_e10 <- pi(10, s_e)
pi_e1000 <- pi(1000, s_e)
plot(dd_gu, pi_e, type = "l", xlab =expression(Delta*Delta*G[u]~(kcal/mol)), ylab = 'Equilibrium proportion of Asp', main = 'Equalibrium of P_e due to Varying dd_gu', xlim = c(-4, 1), ylim = c(0,1)) +abline(v=-1) + abline(v=-3)
plot(dd_gu, pi_e10, type = "l", xlab =expression(Delta*Delta*G[u]~(kcal/mol)), ylab = 'Equilibrium proportion of Asp', main = 'Equalibrium of P_e due to Varying dd_gu', xlim = c(-4, 1), ylim = c(0,1)) +abline(v=-1) + abline(v=-3)
plot(dd_gu, pi_e1000, type = "l", xlab =expression(Delta*Delta*G[u]~(kcal/mol)), ylab = 'Equilibrium proportion of Asp', main = 'Equalibrium of P_e due to Varying dd_gu', xlim = c(-4, 1), ylim = c(0,1)) +abline(v=-1) + abline(v=-3)
s_de <- s_0 - s_e
view(s_de)
View(s_de)
View(s_i)
plot(dd_gu, k_eq_results, type = 'l', xlab =expression(Delta*Delta*G[u]~(kcal/mol), ylab = 'K_eq', main = 'K_eq as a Function of Delta Delta Gu')
plot(dd_gu, k_eq_results, type = 'l', xlab = expression(Delta*Delta*G[u]~(kcal/mol)), ylab = 'K_eq', main = 'K_eq as a Function of Delta Delta Gu')
dd_gu <- seq(-4, 1, by = 0.1)
k_eq <- function(dd_gu){
k_eqs <- exp(-(5+dd_gu)/0.5961611)
return(k_eqs)
}
k_eq_results <- k_eq(dd_gu)
plot(dd_gu, k_eq_results, type = 'l', xlab = expression(Delta*Delta*G[u]~(kcal/mol)), ylab = 'K_eq', main = 'K_eq as a Function of Delta Delta Gu')
s_de <- s_r - s_e
s_de <- s_r - s_e
s_r <- s_i(d_gu, 0)
s_e <- s_i(d_gu, dd_gu)
s_de <- s_r - s_e
s_r <- s_i(d_gu, 0)
s_e <- s_i(d_gu, dd_gu)
s_de <- s_r - s_e
pi <- function(N, s_i){
pi_e <- (exp(2*N*(s_de))/(exp(2*N*s_e)+exp(2*N*s_r))
return(pi_e)
site.diversity <- read.delim("~/Desktop/graduateschoolclasses/Winter_2018/Evolution_of_Biological_Molecules/HW5/data/site-diversity.txt", comment.char="#")
solvent <- read.delim("~/Desktop/graduateschoolclasses/Winter_2018/Evolution_of_Biological_Molecules/HW5/solvent.txt")
RSA <- solvent$rsa
num_aa <- site.diversity$num.aas
plot(num_aa, RSA, xlab= "Number of Amino Acids") + abline(lm(RSA ~ num_aa))
cor.test(num_aa, RSA, method = 'spearman')
minor.sheet.propensities <- read.delim("~/Desktop/graduateschoolclasses/Winter_2018/Evolution_of_Biological_Molecules/HW5/data/minor-sheet-propensities.txt",fill = TRUE, comment.char="#")
#Residues of the Beta Sheets in TEM-1
b_sheet_resi <- c(44, 45, 46, 47, 48, 49, 50, 57, 58, 59, 60, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 258, 259, 260, 261, 262, 263, 264, 265)
#Single letter amino acid
aas = c("A", "C", "D", "E", "F", "G", "H", "I", "K", "L", "M", "N", "P", "Q", "R", "S", "T", "V", "W", "Y")
#Reading the proportions of amino acids at each site in the protein
aaprop <- read.table('/home/justin/Desktop/graduateschoolclasses/Winter_2018/Evolution_of_Biological_Molecules/HW5/data/site-aa-proportion.txt', header = T)
#Matching the amino acid proportions found at each residue in the beta sheets
aaprop.sheets <- aaprop[match(b_sheet_resi, aaprop$site),]
#Determining the mean value of each of the amino acids in beta sheets from the matched vector
mean.aaprop.sheets <- colMeans(aaprop.sheets, na.rm = T)
#Plotting the proportion of amino acids in beta sheets
plot(mean.aaprop.sheets[2:21], minor.sheet.propensities$ddg, pch = aas, xlab = "Amino Acid Proportion in B-Sheets", ylab = 'Propensities of Amino Acids', main = 'Alpha Helices')
helix_propensities <- read.delim("~/Desktop/graduateschoolclasses/Winter_2018/Evolution_of_Biological_Molecules/HW5/data/pace-helix-propensities.txt", fill = TRUE)
a_helix_resi <- c(27,28,29,30,31,32,33,34,35,36,37,38,39,40,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,99,100,101,108,109,110,111,119,120,121,122,123,124,125,126,127,128,132,133,134,135,136,137,138,139,140,141,142,145,146,147,148,149,150,151,152,153,154,155,167,168,169,170,183,184,185,186,187,188,189,190,191,192,193,194,195,201,202,203,204,205,206,207,208,209,210,211,212,213,221,222,223,224,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289)
#Single letter amino acid
aas = c("A", "C", "D", "E", "F", "G", "H", "I", "K", "L", "M", "N", "P", "Q", "R", "S", "T", "V", "W", "Y")
#Reading the proportions of amino acids at each site in the protein
aaprop <- read.table('/home/justin/Desktop/graduateschoolclasses/Winter_2018/Evolution_of_Biological_Molecules/HW5/data/site-aa-proportion.txt', header = T)
#Matching the amino acid proportions found at each residue in the alpha helices
aaprop.helix <- aaprop[match(a_helix_resi, aaprop$site),]
#Determining the mean value of each of the amino acids in beta sheets from the matched vector
mean.aaprop.helix <- colMeans(aaprop.helix, na.rm = T)
#Plotting the proportion of amino acids in beta sheets
plot(mean.aaprop.helix[2:21], helix_propensities$ddg, pch = aas, xlab = "Amino Acid Proportion in A-Helices", ylab = 'Propensities of Amino Acids')
dd_gu <- seq(-4, 1, by = 0.1)
k_eq <- function(dd_gu){
k_eqs <- exp(-(5+dd_gu)/0.5961611)
return(k_eqs)
}
k_eq_results <- k_eq(dd_gu)
plot(dd_gu, k_eq_results, type = 'l', xlab = expression(Delta*Delta*G[u]~(kcal/mol)), ylab = 'K_eq', main = 'K_eq as a Function of Delta Delta Gu')
#Definning Variables
d_gu <- 5
dd_gu <- seq(-4, 1, by = 0.1)
N10 = 10
N100 = 100
N1000 = 1000
#Calculating the Selection Coefficent for each itteration of dd_gu
s_i <- function (d_gu, dd_gu){
s_u <- (1-
(1)/
(1+exp(-(d_gu+dd_gu)/(0.5961611)
)))
return(s_u)
}
s_r <- s_i(d_gu, 0)
s_e <- s_i(d_gu, dd_gu)
s_de <- s_r - s_e
pi <- function(N, s_r){
pi_e <- (exp(2*N*(s_de)))/(exp(2*N*(s_e))+exp(2*N*(s_r)))
return(pi_e)
}
pi_e10 <- pi(N10, s_de)
pi_e100 <- pi(N100, s_de)
pi_e1000 <- pi(N1000, s_de)
plot(dd_gu, pi_e10, type = "l", xlab =expression(Delta*Delta*G[u]~(kcal/mol)), ylab = 'Equilibrium proportion of Asp (N = 10)', main = 'Equalibrium of P_e due to Varying dd_gu', xlim = c(-4, 1), ylim = c(0,1)) +abline(v=-1) + abline(v=-3)
plot(dd_gu, pi_e100, type = "l", xlab =expression(Delta*Delta*G[u]~(kcal/mol)), ylab = 'Equilibrium proportion of Asp (N = 100)', main = 'Equalibrium of P_e due to Varying dd_gu', xlim = c(-4, 1), ylim = c(0,1)) +abline(v=-1) + abline(v=-3)
plot(dd_gu, pi_e1000, type = "l", xlab =expression(Delta*Delta*G[u]~(kcal/mol)), ylab = 'Equilibrium proportion of Asp (N = 1000)', main = 'Equalibrium of P_e due to Varying dd_gu', xlim = c(-4, 1), ylim = c(0,1)) +abline(v=-1) + abline(v=-3)
